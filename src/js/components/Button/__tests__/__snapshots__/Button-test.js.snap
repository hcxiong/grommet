// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button color renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 0;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #FD6FFF;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #FD6FFF;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

.c4 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #FD6FFF;
  border-radius: 24px;
  color: #444444;
  background-color: #FD6FFF;
  color: #444444;
  border-radius: 24px;
  padding: 10px 46px;
}

.c4 svg {
  fill: #FFFFFF;
  stroke: #FFFFFF;
  -webkit-transition: none;
  transition: none;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #FD6FFF;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

@media only screen and (min-width:700px) {
  .c4 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    color="accent-1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
  <button
    className="c4"
    color="accent-1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;

exports[`Button disabled renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  opacity: 0.3;
  cursor: default;
  padding: 10px 46px;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={true}
    onBlur={[Function]}
    onFocus={[Function]}
    type="button"
  />
</div>
`;

exports[`Button focus renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 0;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
  border-color: #FD6FFF;
  box-shadow: 0 0 2px 2px #FD6FFF;
}

.c1 > circle,
.c1 > ellipse,
.c1 > line,
.c1 > path,
.c1 > polygon,
.c1 > polyline,
.c1 > rect {
  outline: #FD6FFF solid 2px;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;

exports[`Button hoverIndicator as object renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with color renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(134,92,214,0.3);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with colorIndex renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(253,111,255,0.3);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid color renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid color renders 2`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator as object with invalid colorIndex renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button hoverIndicator renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

.c1:hover {
  background-color: rgba(221,221,221,0.5);
  color: #000000;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    hoverIndicator
  </button>
</div>
`;

exports[`Button href renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <a
    className="c1"
    disabled={false}
    href="test"
    onBlur={[Function]}
    onFocus={[Function]}
  />
</div>
`;

exports[`Button icon label renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 12px;
}

.c3 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 12px;
}

.c4 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 6px;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    icon={<svg />}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <svg />
      <div
        className="c3"
      />
      <span
        className="c4"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;

exports[`Button primary renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 0;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  background-color: #865CD6;
  color: #FFFFFF;
  border-radius: 24px;
  padding: 10px 46px;
}

.c1 svg {
  fill: #FFFFFF;
  stroke: #FFFFFF;
  -webkit-transition: none;
  transition: none;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;

exports[`Button renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 0;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;

exports[`Button reverse icon label renders 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 12px;
}

.c4 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 12px;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #865CD6;
  border-radius: 24px;
  color: #444444;
  padding: 10px 46px;
}

.c1:hover {
  box-shadow: 0px 0px 0px 2px #865CD6;
}

.c1:hover svg {
  fill: #000000;
  stroke: #000000;
  -webkit-transition: none;
  transition: none;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 6px;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    icon={<svg />}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
      <div
        className="c4"
      />
      <svg />
    </div>
  </button>
</div>
`;

exports[`Button warns about invalid icon render 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 12px;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 6px;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    icon={<svg />}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <svg />
    </div>
  </button>
</div>
`;

exports[`Button warns about invalid label render 1`] = `
.c0 {
  font-family: 'Work Sans',Arial,sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #444444;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  outline: none;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0;
  padding: 0;
}

.c3 {
  font-size: 16px;
  line-height: 1.375;
}

.c1 {
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background-color: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  border: none;
  padding: 0;
  text-align: inherit;
  min-height: -webkit-min-content;
  min-height: -moz-min-content;
  min-height: min-content;
}

@media only screen and (max-width:699px) {
  .c2 {
    margin: 0;
  }
}

@media only screen and (max-width:699px) {
  .c2 {
    padding: 0;
  }
}

@media only screen and (min-width:700px) {
  .c1 {
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
  }
}

<div
  className="c0"
>
  <button
    className="c1"
    disabled={false}
    label="Test"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    type="button"
  >
    <div
      className="c2"
    >
      <span
        className="c3"
      >
        <strong>
          Test
        </strong>
      </span>
    </div>
  </button>
</div>
`;
